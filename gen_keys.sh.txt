#!/bin/sh

# author: Professores de Sistemas DistribuÃ­dos 2016 - Instituto Superior TÃ©cnico
################################################################################
# Script para geraÃ§Ã£o de certificados de chave pÃºblica
# uso:
#     ./gen_keys.sh <nome-de-servidor1 nome-de-servidor2 nome-de-servidor3...>
# Para mais informaÃ§Ã£o sobre assinatura de certificados consultar:
# - https://docs.oracle.com/cd/E19509-01/820-3503/ggeyj/index.html
# - https://docs.oracle.com/cd/E19509-01/820-3503/ggezy/index.html
################################################################################

#constantes
NOW=$(date +"%Y_%m_%d__%H_%M_%S")
CA_ALIAS="ca"
STORE_PASS="ins3cur3"
KEY_PASS="1nsecure"
CA_CERTIFICATE_PASS="1ns3cur3"
CA_CSR_FILE="ca.csr"
D_NAME="CN=DistributedSystems,OU=DEI,O=IST,L=Lisbon,S=Lisbon,C=PT"
SUBJ="/CN=DistributedSystems/OU=DEI/O=IST/L=Lisbon/C=PT"
KEYS_VALIDITY=90
OUTPUT_FOLDER="keys_$NOW"
CA_FOLDER="$OUTPUT_FOLDER/ca"
STORE_FILE="$CA_FOLDER/ca-keystore.jks"
CA_PEM_FILE="$CA_FOLDER/ca-certificate.pem.txt"
CA_KEY_FILE="$CA_FOLDER/ca-key.pem.txt"

################################################################################
# 1 - Em primeiro lugar gera-se o certificado da CA.
# Este certificado Ã© usado para assinar os restantes certificados
# Este procedimento Ã© feito uma vez para a CA e os ficheiros gerados(*.pem.txt)
# sÃ£o usados para assinar as chaves dos restantes servidores (UpaBroker, etc.)
################################################################################
mkdir $OUTPUT_FOLDER
mkdir $CA_FOLDER
echo "A gerar certificado da CA..."
echo "openssl req -new -x509 -keyout $CA_KEY_FILE -out $CA_PEM_FILE -days $KEYS_VALIDITY -passout pass:$CA_CERTIFICATE_PASS -subj $SUBJ"
openssl req -new -x509 -keyout $CA_KEY_FILE -out $CA_PEM_FILE -days $KEYS_VALIDITY -passout pass:$CA_CERTIFICATE_PASS -subj $SUBJ
echo "Certificado da CA gerado."

################################################################################
# 2 - De seguida sÃ£o assinados os certificados dos servidores (UpaBroker e
# UpaTransporters) usando os ficheiros gerados no comando anterior. Este procedimento
# Ã© executado uma vez para cada servidor
################################################################################

for server_name in $*
do
  server_folder=$OUTPUT_FOLDER/$server_name
  mkdir $server_folder
  server_keystore_file="$server_folder/$server_name.jks"
  csr_file="$server_folder/$server_name.csr"
  echo "A gerar par de chaves de $server_name..."
  keytool -keystore $server_keystore_file -genkey -alias $server_name -keyalg RSA -keysize 2048 -keypass $KEY_PASS -validity $KEYS_VALIDITY -storepass $STORE_PASS  -dname $D_NAME
  echo "A gerar o Certificate Signing Request de $server_name..."
  keytool -keystore $server_keystore_file -certreq -alias $server_name -keyalg rsa -file $csr_file -storepass $STORE_PASS -keypass $KEY_PASS
  echo "A gerar o certificado assinado de $server_name..."
  openssl  x509  -req  -CA $CA_PEM_FILE -CAkey $CA_KEY_FILE -passin pass:$CA_CERTIFICATE_PASS -in $csr_file -out "$server_folder/$server_name.cer"  -days $KEYS_VALIDITY -CAcreateserial
  echo "A importar o certificado da CA para a keystore de $server_name..."
  keytool -import -keystore $server_keystore_file -file $CA_PEM_FILE  -alias $CA_ALIAS -keypass $KEY_PASS -storepass $STORE_PASS -noprompt
  echo "A importar o certificado assinado de $server_name para a keystore de $server_name"
  keytool -import -keystore $server_keystore_file -file "$server_folder/$server_name.cer" -alias $server_name -storepass $STORE_PASS -keypass $KEY_PASS
done
